<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ericsson.orchestration.solutiondevelopment.assurance.camunda</groupId>
    <artifactId>ocwf_micro</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>PF Camunda Microservice</name>
    <description>Spring Boot Application using [Camunda](http://docs.camunda.org). [The project has been generated by the Maven archetype 'camunda-archetype-spring-boot-7.8.2']</description>


    <properties>
        <camunda.version>7.9.0</camunda.version>
        <!-- Adjust if you want to use EE: <camunda.version>7.8.0-ee</camunda.version>
            Make sure you also switch to the ee webapp dependency and EE repository below 
            <sonar.scm.provider>git</sonar.scm.provider> <sonar.projectKey>SD-ocwf_micro-Orion</sonar.projectKey>
            <sonar.host.url>https://sonarqube.lmera.ericsson.se/</sonar.host.url> <sonar.login>d9fad3915a74a0a42badfbea9cd0d97903df8c68</sonar.login>
            <sonar.analysis.mode>preview</sonar.analysis.mode> <sonar.junit.reportsPath>target/surefire-reports/</sonar.junit.reportsPath>
            <sonar.jacoco.reportPath>target/coverage-reports/jacoco-unit.exec</sonar.jacoco.reportPath> -->
        <camundaSpringBoot.version>3.0.0</camundaSpringBoot.version>
        <springBoot.version>2.0.3.RELEASE</springBoot.version>


        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <sonar.scm.provider>git</sonar.scm.provider>
        <sonar.projectKey>SD-OCWF-Micro</sonar.projectKey>
        <sonar.host.url>https://sonarqube.lmera.ericsson.se/</sonar.host.url>
        <sonar.login>fdc3757f1542c21c3c0f92e87e7abfb32052439e</sonar.login>
        <sonar.analysis.mode>preview</sonar.analysis.mode>
        <sonar.junit.reportPaths>target/surefire-reports/</sonar.junit.reportPaths>
        <sonar.jacoco.reportPaths>target/coverage-reports/jacoco-unit.exec</sonar.jacoco.reportPaths>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <version.java>1.8</version.java>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <failOnMissingWebXml>false</failOnMissingWebXml>

    </properties>





  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-bom</artifactId>
        <version>${camunda.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.camunda.bpm.dmn</groupId>
        <artifactId>camunda-engine-dmn-bom</artifactId>
        <version>${camunda.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${springBoot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

    <dependencies>


        <dependency>
            <groupId>org.camunda.bpm.springboot</groupId>
            <artifactId>camunda-bpm-spring-boot-starter-webapp</artifactId>
            <!-- Adjust if you want to use EE: <artifactId>camunda-bpm-spring-boot-starter-webapp-ee</artifactId> 
                Make sure you also use an EE version of Camunda - see above -->
            <version>${camundaSpringBoot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.camunda.bpm.springboot</groupId>
            <artifactId>camunda-bpm-spring-boot-starter-rest</artifactId>
            <version>${camundaSpringBoot.version}</version>
        </dependency>


    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>

    <!-- required to use H2 as a file based database.  (Otherwise it's In-Memory) -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>

        <!-- Required to use Spin dataformat support -->
        <dependency>
            <groupId>org.camunda.spin</groupId>
            <artifactId>camunda-spin-dataformat-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-engine-plugin-spin</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm.extension</groupId>
            <artifactId>camunda-bpm-assert</artifactId>
            <version>1.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm.extension</groupId>
            <artifactId>camunda-bpm-assert-scenario</artifactId>
            <version>0.2</version>
            <scope>test</scope>
        </dependency>
        <!-- Used to generate test coverage reports, see https://github.com/camunda/camunda-consulting/tree/master/snippets/camunda-bpm-process-test-coverage -->
        <!-- <dependency> <groupId>org.camunda.bpm.extension</groupId> <artifactId>camunda-bpm-process-test-coverage</artifactId> 
            <version>0.3.2</version> <scope>test</scope> </dependency> -->

        <!-- java util logging => slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Add your own dependencies here, if in compile scope, they are added 
            to the jar -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>1.1.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.5</version>
        </dependency>
        
            <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
    <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.8.4</version>
    </dependency>


    </dependencies>


    <repositories>
        <repository>
            <id>camunda-bpm-nexus</id>
            <name>Camunda BPM Maven Repository</name>
            <url>https://app.camunda.com/nexus/content/groups/public</url>
        </repository>
        <!-- enable this for EE dependencies <repository> <id>camunda-bpm-nexus-ee</id> 
            <name>camunda-bpm-nexus</name> <url>https://app.camunda.com/nexus/content/repositories/camunda-bpm-ee</url> 
            </repository> -->
    </repositories>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>


            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${springBoot.version}</version>
                <configuration>
                    <layout>ZIP</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.2</version>
                <executions>
                    <execution>
                        <id>validate-checkstyle</id>
                        <phase>test</phase>
                        <goals>
                            <goal>sonar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.8.2</version>
                        <executions>
                            <execution>
                                <id>jacoco-initialize</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
                                    <propertyName>surefireArgLine</propertyName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jacoco-site</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
                                </configuration>
                            </execution>
                        </executions>

                    </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <mainClass>com.ericsson.orchestration.solutiondevelopment.assurance.camunda.CamundaApplication</mainClass>
                </configuration>
            </plugin>
        </plugins>

    </build>


     <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies></dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.17</version>
                        <configuration>
                            <!-- Sets the VM argument line used when unit tests are run. -->
                            <argLine>${surefireArgLine}</argLine>
                            <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                            <skipTests>${skip.unit.tests}</skipTests>
                            <!-- Excludes integration tests when unit tests are run. . -->
                            <excludes>
                                <exclude>**/IT*.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

     </profiles>

</project>